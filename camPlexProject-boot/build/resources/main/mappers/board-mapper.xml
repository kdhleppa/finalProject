<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace를 Mapper 인터페이스로 지정 -->
<mapper namespace="com.camplex.project.board.mappers.BoardMapper">
	
	<!-- Board DTO에 대한 resultMap -->
	<resultMap type="Board" id="board_rm">
	
		<id property="boardNo" column="BOARD_NO"/>
		
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="boardReadCount" column="B_READ_COUNT"/>
		<result property="boardType" column="BOARD_TYPE"/>
		<result property="boardCreateDate" column="B_CREATE_DATE"/>
		<result property="boardTypeName" column="BOARD_TYPE_NAME"/>
		
		<result property="commentCount" column="COMMENT_COUNT"/>
		<result property="likeCount" column="LIKE_COUNT"/>
		
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="memberProfileImg" column="MEMBER_PROFILE_IMG"/>
		
		<result property="thumbnail" column="THUMBNAIL"/>
		
		
		<collection property="imageList"
					select="selectImageList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="BoardImage"
		 />
		
		<collection property="commentList"
					select="selectCommentList"
					column="BOARD_NO"
					javaType="java.util.ArrayList"
					ofType="Comment"
		 />
		 
	</resultMap>
	
	<!-- BoardImage resultMap -->
	<resultMap type="BoardImage" id="boardImage_rm">
		<id property="boardImageNo" column="BOARD_IMG_NO"/>
		<result property="boardImagePath" column="BOARD_IMG_PATH"/>
		<result property="boardImageReName" column="BOARD_IMG_RENAME"/>
		<result property="boardImageOriginal" column="BOARD_IMG_ORIGINAL"/>
		<result property="boardImageOrder" column="BOARD_IMG_ORDER"/>
		<result property="boardNo" column="BOARD_NO"/>
	</resultMap>
	
	
	<!-- Comment resultMap -->
	<resultMap type="Comment" id="comment_rm">
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="commentContent" column="COMMENT_CONTENT"/>
		<result property="commentCreateDate" column="C_CREATE_DATE"/>
		<result property="commentDeleteFlag" column="COMMENT_DEL_FL"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="parentNo" column="PARENT_NO"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="memberProfileImg" column="MEMBER_PROFILE_IMG"/>
	</resultMap>
	
	
		<!-- 게시판 종류 목록 조회 -->
		<select id="selectBoardTypeList" resultType="map">
			SELECT * FROM "BOARD_TYPE_FL"
			JOIN "BOARD" USING(BOARD_TYPE)
			ORDER BY 1
		</select>
		
		<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
	  	<select id="getListCount" resultType="_int">
	  		SELECT COUNT(*) FROM BOARD
			WHERE BOARD_DEL_FL = 'N'
			AND BOARD_TYPE = #{boardType}
	  	</select>
	  	
	  	<!-- CDATA 태그 : 해당 태그 내부에 작성된 것은 모두 문자로 취급 -->
	  	<select id="selectBoardList" resultMap="board_rm">
	  		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, B_READ_COUNT, B_CREATE_DATE,
	  		
		  		(SELECT COUNT(*) FROM "COMMENT" C
				 WHERE C.BOARD_NO = B.BOARD_NO
				 AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
				(SELECT COUNT(*) FROM BOARD_LIKE L
				 WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
				(SELECT BOARD_IMG_PATH || BOARD_IMG_RENAME FROM BOARD_IMG I
				WHERE I.BOARD_NO = B.BOARD_NO
				AND BOARD_IMG_ORDER = 0) THUMBNAIL
			
			FROM "BOARD" B
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_DEL_FL = 'N'
			AND BOARD_TYPE = #{boardType}
			ORDER BY BOARD_NO DESC
	  	</select>
	  	
	  	<!-- 게시글 목록 조회(검색) -->
	  	<select id="selectSearchBoardList" resultMap="board_rm">
	  		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, B_READ_COUNT, B_CREATE_DATE
			FROM "BOARD"
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_DEL_FL = 'N'
			AND BOARD_TYPE = #{boardType}
			
			<choose>
				<when test='key == "t"'>
					<!-- 제목 -->
					AND BOARD_TITLE LIKE '%${query}%'
				</when>
				
				<when test='key == "c"'>
					<!-- 내용 -->
					AND BOARD_CONTENT LIKE '%${query}%'
				</when>
				
				<when test='key == "tc"'>
					<!-- 제목 + 내용 -->
					AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
				</when>
				
				<when test='key == "w"'>
					<!-- 작성자(닉네임) -->
					AND MEMBER_NICKNAME LIKE '%${query}%'
				</when>
				
			</choose>
			
			
			ORDER BY BOARD_NO DESC
	  	</select>
	  	
	  	
	  	<!-- 특정 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 수 조회 -->
	  	<select id="getSearchListCount" resultType="_int">
	  		SELECT COUNT(*) FROM BOARD
	  		
	  		<!-- 작성자 검색 -->
	  		<if test='key == "w"'>
	  			JOIN "MEMBER" USING(MEMBER_NO)
	  		</if>
	  		
			WHERE BOARD_DEL_FL = 'N'
			AND BOARD_TYPE = #{boardType}
			
			<choose>
				<when test='key == "t"'>
					<!-- 제목 -->
					AND BOARD_TITLE LIKE '%${query}%'
				</when>
				
				<when test='key == "c"'>
					<!-- 내용 -->
					AND BOARD_CONTENT LIKE '%${query}%'
				</when>
				
				<when test='key == "tc"'>
					<!-- 제목 + 내용 -->
					AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
				</when>
				
				<when test='key == "w"'>
					<!-- 작성자(닉네임) -->
					AND MEMBER_NICKNAME LIKE '%${query}%'
				</when>
				
			</choose>
			
	  	</select>
	  	
	  	<!-- 게시글 상세 조회 -->
	  	<select id="selectBoard" resultMap="board_rm">
	  		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_TYPE,
				B_READ_COUNT, MEMBER_NICKNAME, MEMBER_NO, MEMBER_PROFILE_IMG, B_CREATE_DATE,
				(SELECT COUNT(*)
				FROM "BOARD_LIKE" L
				WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
			FROM "BOARD" B
			JOIN "MEMBER" USING(MEMBER_NO)
			WHERE BOARD_DEL_FL = 'N'
			AND BOARD_TYPE = #{boardType}
			AND BOARD_NO = #{boardNo}
	  	</select>
	  	
	  	<!-- 특정 게시글 이미지 조회 -->
	  	<select id="selectImageList" resultMap="boardImage_rm">
	  		SELECT * FROM BOARD_IMG
			WHERE BOARD_NO = #{boardNo}
			ORDER BY BOARD_IMG_ORDER
	  	</select>
	  	
  	  	<!-- 특정 게시글 댓글 조회(바뀔 예정) -->
		<select id="selectCommentList" resultMap="comment_rm">
			SELECT LEVEL, C.* FROM
				(SELECT COMMENT_NO, COMMENT_CONTENT,
				TO_CHAR(C_CREATE_DATE, 'YYYY"-"MM"-"DD HH24"시" MI"분" SS"초"') C_CREATE_DATE,
				BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, MEMBER_PROFILE_IMG, PARENT_NO, COMMENT_DEL_FL
				FROM "COMMENT"
				JOIN MEMBER USING(MEMBER_NO)
				WHERE BOARD_NO = #{boardNo}) C
			WHERE COMMENT_DEL_FL = 'N'
			START WITH PARENT_NO IS NULL
			CONNECT BY PRIOR COMMENT_NO = PARENT_NO
			ORDER SIBLINGS BY COMMENT_NO
		</select>
	  	
	  	<!-- 좋아요 여부 확인 -->
	  	<select id="boardLikeCheck" resultType="_int">
	  		SELECT COUNT(*) FROM BOARD_LIKE
			WHERE BOARD_NO = #{boardNo}
			AND MEMBER_NO = #{memberNo}
	  	</select>
	  	
		<!-- 조회 수 증가 -->
	  	<update id="updateReadCount">
	  		UPDATE "BOARD" SET
	  		B_READ_COUNT = B_READ_COUNT + 1
	  		WHERE BOARD_NO = #{boardNo}
	  	</update>
	  	
	  	<!-- 좋아요 삽입 -->
	  	<insert id="insertBoardLike">
	  		INSERT INTO "BOARD_LIKE" VALUES (#{boardNo}, #{memberNo})
	  	</insert>
	  	
	  	<!-- 좋아요 삭제 -->
	  	<delete id="deleteBoardLike">
	  		DELETE FROM "BOARD_LIKE"
	  		WHERE BOARD_NO = #{boardNo}
	  		AND MEMBER_NO = #{memberNo}
	  	</delete>
	  	
	  	<!-- 좋아요 조회 -->
	  	<select id="countBoardLike" resultType="_int">
	  		SELECT COUNT(*) FROM "BOARD_LIKE" WHERE BOARD_NO = #{boardNo}
	  	</select>
	  	
	  	<!-- 이미지 목록 조회 -->
	  	<select id="selectImageListAll" resultType="string">
	  		SELECT BOARD_IMG_RENAME FROM BOARD_IMG
	  	</select>
	
</mapper>